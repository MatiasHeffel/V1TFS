<project name='V1TFS2010' default='compile'>

	<property name='project.name' value='${project::get-name()}' />
	
	<property name='publish.dir' value='publish' unless="${property::exists('publish.dir')}" />
	
	<property name='msbuild.dir' value='Common\msbuild\3.5' />
	
	<!-- TODO possibly use MSBuild task and not provide the path -->
	<property name='msbuild.exe' value="${environment::get-variable('SystemRoot')}\Microsoft.NET\Framework\v4.0.30319\MSBuild.exe"/>
	<property name='devenv.com' value="C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE\devenv.com"/>

	
	<property name='msbuild.args' value='/v:q /consoleloggerparameters:NoSummary /nologo' />
		
	<property name='build.config' value='Debug' />
	<target name='debug' description='Select Debug build'>
		<property name='build.config' value='Debug' />
	</target>
	<target name='release' description='Select Release build'>
		<property name='build.config' value='Release' />
	</target>

	<!--== SETVERSION ==-->
	<property name='ver.major' value='1' />
	<property name='ver.minor' value='0' />
	<property name='ver.major.minor' value='${ver.major}.${ver.minor}' />
	<property name='build.version' value='${ver.major.minor}' />
 	
	<if test="${property::exists('build.number')}">
		<property name='build.version' value='${ver.major.minor}.${build.number}' />
		<if test="${property::exists('ver.revision') and int::parse(ver.revision) > 0}">
			<property name='build.version' value='${ver.major.minor}.${build.number}.${ver.revision}' />
		</if>
	</if>
		
	<!--== CLEAN ==-->
	<target name='clean'>
		<call target='compile.clean' />
		<call target='publish.clean' />
	</target>
	
	<!--== COMPILE ==-->
	<target name='compile.init'>
		<property name='msbuild.snk' value="${path::get-full-path('Common\SigningKey\VersionOne.snk')}"/>	
		<property name='compile.sln' value='${project.name}.sln' />
	</target>

	<target name='compile' description='Compile all projects' depends='compile.init'>
		<property name='msbuild.signargs' value='/p:SignAssembly=true /p:AssemblyOriginatorKeyFile=${msbuild.snk}' />
<!-- 		<exec program='${msbuild.exe}' commandline='${compile.sln} /t:Rebuild /p:Configuration=${build.config} ${msbuild.args} ${msbuild.signargs}' basedir='${msbuild.dir}' /> -->
		<exec program='${msbuild.exe}' commandline='${compile.sln} /t:Rebuild /p:Configuration=${build.config} ${msbuild.args}' basedir='${msbuild.dir}' />
	</target>
	
	<target name='compile.clean'>
		<delete failonerror='false'>
			<fileset>
				<include name='**\obj\**' />
				<include name='*\bin\**' />
				<exclude name='VersionOneTFSServer\Bin\**'/>
				<include name='VersionOne.TFSListener.Installer\Release\**' />
				<include name='VersionOne.TFSListener.Installer\Debug\**' />
			</fileset>
		</delete>
		<delete dir='PrecompiledWeb'/>
	</target>

	<!--== PACKAGE ==-->
	<target name='package' />
	
	
	<!--== PUBLISH ==-->	
	<target name='publish.init'>
		<property name='publish.temp' value='_publish'/>
		<property name='publish.zipfile' value='${publish.dir}/V1TFS2010-${build.version}.zip'/>

		<mkdir dir='${publish.temp}'/>
		<mkdir dir='${publish.dir}'/>
		<copy todir='${publish.temp}/VersionOneCheckinPolicy' flatten='true'>
		    <fileset basedir="VersionOneTFSPolicyInstaller/bin/${build.config}">
		        <include name="*.vsix" />
		    </fileset>
		</copy>

		<copy todir='${publish.temp}/VersionOneTFSListener' flatten='true'>
		    <fileset basedir="VersionOne.TFSListener.Installer/bin/${build.config}">
		        <include name="*.msi" />
		    </fileset>
		</copy>

		<copy todir='${publish.temp}/Doc' flatten='false'>
		    <fileset basedir="Doc">
		        <include name="*/**" />
		    </fileset>
		</copy>
		
	</target>
	
	<target name='publish' depends='publish.init'>	
		<zip zipfile='${publish.zipfile}'>
			<fileset basedir='${publish.temp}'>
				<include name="**/*" />
			</fileset>
		</zip>		
		<delete dir='${publish.temp}'/>
	</target>

	<target name='publish.clean'>
		<delete dir='${publish.dir}'/>
	</target>

	<!--== ALL ==-->
	<target name='all' depends='clean, compile, package, publish' description='The works, from source to distributable binaries.' />
	
</project>

#!/bin/bash -e

. ./build.properties
if [ -d build-tools ]; then cd build-tools && git fetch && git stash && git pull && cd ..; else git clone https://github.com/versionone/openAgile-build-tools.git build-tools; fi
source ./build-tools/common.sh

# ---- Produce .NET Metadata --------------------------------------------------

COMPONENTS="VersionOne.TFS2010.Common VersionOne.TFS2010.DataLayer VersionOneTFSPolicy VersionOneTFSPolicyInstaller VersionOneTFSServer VersionOneTFSServerConfig"
for COMPONENT_NAME in $COMPONENTS; do
cat > "$WORKSPACE/$COMPONENT_NAME/Properties/AssemblyInfo.cs" <<EOF
// Auto generated by build.sh at `date -u`

using System;
using System.Reflection;
using System.Resources;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;

[assembly: AssemblyVersion("$VERSION_NUMBER.0")]
[assembly: AssemblyFileVersion("$VERSION_NUMBER.$BUILD_NUMBER")]
[assembly: AssemblyInformationalVersion("See $GITHUB_WEB_URL/wiki")]

[assembly: AssemblyProduct("$COMPONENT_NAME")]
[assembly: AssemblyTitle("$COMPONENT_NAME")]
[assembly: AssemblyDescription("$PRODUCT_NAME $Configuration Build")]
[assembly: AssemblyCompany("$ORGANIZATION_NAME")]
[assembly: AssemblyCopyright("Copyright $COPYRIGHT_RANGE, $ORGANIZATION_NAME, Licensed under modified BSD.")]

[assembly: AssemblyConfiguration("$Configuration")]
EOF
done


# ---- Clean solution ---------------------------------------------------------

# MSBuild.exe $SOLUTION_FILE /m /t:Clean

nuget_packages_refresh

# ---- Build solution using msbuild -------------------------------------------

WIN_SIGNING_KEY="`winpath "$SIGNING_KEY"`"
WIN_SIGNING_KEY="`winpath "$SIGNING_KEY"`"
echo $Platform
MSBuild.exe $SOLUTION_FILE \
  -p:SignAssembly=false \
  -p:AssemblyOriginatorKeyFile=$WIN_SIGNING_KEY \
  -p:RequireRestoreConsent=false \
  -p:Configuration="$Configuration" \
  -p:Platform="$Platform" \
  -p:Verbosity=Diagnostic


# ---- Execute nspec tests -------------------------------------------

./tests.sh
